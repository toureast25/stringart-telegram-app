/**
 * Parameters - Централизованные параметры приложения
 * Все настройки, которые зависят от пользователя и могут быть изменены
 */

class Parameters {
  constructor() {
    // ========================================
    // НАСТРОЙКИ ИЗОБРАЖЕНИЯ
    // ========================================
    this.image = {
      // Разрешение изображения
      resolution: {
        min: 100,           // Минимальная ширина в пикселях
        max: 300,           // Максимальная ширина в пикселях
        default: 200,       // Значение по умолчанию
        step: 1             // Шаг изменения
      },
      
      // Размытие
      blur: {
        min: 0,             // Минимальное размытие
        max: 1,             // Максимальное размытие
        default: 0,         // Значение по умолчанию
        step: 0.1           // Шаг изменения
      },
      
      // Тестовое изображение
      testImage: {
        url: 'https://sun9-83.userapi.com/s/v1/ig1/XJRPO-T4RuE0KFMctnOM20rCs68dYcO4H5KnFW6s5E_x1BlQhkN2lojil1AW11LQ6xGG1uKa.jpg?quality=96&as=32x40,48x60,72x90,108x135,160x200,240x300,360x449,480x599,540x674,640x799,720x899,865x1080&from=bu&cs=865x0',
        fallback: true      // Использовать fallback изображение если основное не загрузится
      }
    };

    // ========================================
    // НАСТРОЙКИ АНАЛИЗА ЦВЕТОВ
    // ========================================
    this.colorAnalysis = {
      // Методы кластеризации
      clusteringMethods: {
        kmeans: {
          name: 'k-means',
          enabled: true
        },
        tones: {
          name: 'По тонам',
          enabled: true
        },
        default: 'kmeans'  // Метод по умолчанию
      },
      
      // Количество цветов
      colorCount: {
        options: [3, 6, 9, 12, 15],  // Доступные варианты
        default: 3                    // Значение по умолчанию
      },
      
      // Настройки для метода по тонам
      tones: {
        minDeltaE: {
          min: 1,           // Минимальная разница цветов
          max: 100,         // Максимальная разница цветов
          default: 25       // Значение по умолчанию
        },
        distribution: {
          dark: {
            min: 0,         // Минимальное количество тёмных цветов
            max: 9,         // Максимальное количество
            default: 1      // Значение по умолчанию
          },
          mid: {
            min: 0,         // Минимальное количество средних цветов
            max: 9,         // Максимальное количество
            default: 1      // Значение по умолчанию
          },
          light: {
            min: 0,         // Минимальное количество светлых цветов
            max: 9,         // Максимальное количество
            default: 1      // Значение по умолчанию
          }
        }
      },
      
      // Настройки k-means
      kmeans: {
        maxIterations: 100,  // Максимальное количество итераций
        convergenceThreshold: 1  // Порог сходимости (Delta E)
      }
    };

    // ========================================
    // НАСТРОЙКИ ФОНА
    // ========================================
    this.background = {
      // Автоматическое определение фона
      autoDetection: {
        edgePercent: {
          min: 1,           // Минимальный процент краев
          max: 50,          // Максимальный процент краев
          default: 10       // Значение по умолчанию
        }
      },
      
      // Предустановленные цвета фона
      presets: [
        { color: '#ffffff', name: 'Белый' },
        { color: '#000000', name: 'Чёрный' },
        { color: '#888888', name: 'Серый' }
      ],
      
      // Цвет фона по умолчанию
      defaultColor: '#000000'
    };

    // ========================================
    // НАСТРОЙКИ STRINGART
    // ========================================
    this.stringart = {
      // Форма полотна
      canvasShape: {
        options: [
          { value: 'circle', name: 'Круглый' },
          { value: 'square', name: 'Квадратный' }
        ],
        default: 'circle'
      },
      
      // Размер полотна (в сантиметрах)
      canvasSize: {
        options: [30],      // Доступные размеры
        default: 30         // Размер по умолчанию
      },
      
      // Количество гвоздей
      nailCount: {
        min: 50,            // Минимальное количество
        max: 500,           // Максимальное количество
        default: 200        // Значение по умолчанию
      },
      
      // Размер гвоздей в превью (в пикселях)
      nailSize: 1.5
    };

    // ========================================
    // НАСТРОЙКИ ПРОИЗВОДИТЕЛЬНОСТИ
    // ========================================
    this.performance = {
      // Задержки для debouncing (в миллисекундах)
      delays: {
        paletteExtraction: 36,    // Извлечение палитры
        tonesChange: 24,          // Изменение тонов
        backgroundRecalc: 24,     // Пересчет фона
        previewGeneration: 30,    // Генерация превью
        blurUpdate: 12,           // Обновление размытия
        maxRetries: 10,           // Максимальное количество попыток загрузки
        retryDelay: 100           // Задержка между попытками (мс)
      },
      
      // Ограничения для мобильных устройств
      mobile: {
        maxImageSize: 400000,     // Максимальный размер изображения (пиксели)
        maxSamples: 2000,         // Максимальное количество образцов для анализа
        samplingStep: 96          // Шаг семплирования (4 * 24)
      },
      
      // Ограничения для десктопа
      desktop: {
        maxSamples: 5000,         // Максимальное количество образцов
        samplingStep: 24          // Шаг семплирования (4 * 6)
      }
    };

    // ========================================
    // НАСТРОЙКИ ИНТЕРФЕЙСА
    // ========================================
    this.ui = {
      // Размеры элементов
      sizes: {
        colorCircle: 24,          // Размер цветового кружка (px)
        colorCircleBorder: 2,     // Толщина границы кружка (px)
        nailRadius: 1.5,          // Радиус гвоздя в превью (px)
        previewMaxHeight: '70dvh' // Максимальная высота превью
      },
      
      // Цвета интерфейса
      colors: {
        border: '#fff',           // Цвет границ элементов
        accent: '#2ea6ff',        // Акцентный цвет
        background: '#0f1115',    // Основной фон
        card: '#151924',          // Фон карточек
        text: '#e7e9ee',          // Основной текст
        muted: '#9aa3b2'          // Приглушенный текст
      },
      
      // Анимации
      animations: {
        transition: '0.2s ease',  // Стандартный переход
        hoverScale: 1.1           // Масштаб при наведении
      }
    };

    // ========================================
    // НАСТРОЙКИ TELEGRAM
    // ========================================
    this.telegram = {
      // Настройки Mini App
      miniApp: {
        headerColor: '#151924',   // Цвет заголовка
        mainButtonColor: '#2ea6ff', // Цвет главной кнопки
        mainButtonText: 'Поделиться результатом'
      },
      
      // Настройки бота
      bot: {
        username: '@stringart_generator_bot',
        startParam: 'stringart'
      }
    };

    // ========================================
    // НАСТРОЙКИ ФАКТИЧЕСКИХ ЦВЕТОВ
    // ========================================
    this.actualColors = {
      // Настройки сопоставления
      matching: {
        autoMatch: true,          // Автоматическое сопоставление
        syncWithCalculated: true  // Синхронизация с расчетной палитрой
      },
      
      // Предустановленные цвета для производства
      presets: [
        '#ffffff', '#000000', '#ff0000', '#00ff00', '#0000ff',
        '#ffff00', '#ff00ff', '#00ffff', '#ffa500', '#800080',
        '#ffc0cb', '#a52a2a', '#808080', '#008000', '#000080'
      ]
    };

    // ========================================
    // НАСТРОЙКИ КЕШИРОВАНИЯ
    // ========================================
    this.cache = {
      enabled: true,              // Включить кеширование
      maxAge: 300000,            // Максимальный возраст кеша (5 минут)
      clearOnImageChange: true   // Очищать кеш при смене изображения
    };

    // ========================================
    // НАСТРОЙКИ ОТЛАДКИ
    // ========================================
    this.debug = {
      enabled: false,             // Включить режим отладки
      logLevel: 'info',          // Уровень логирования (error, warn, info, debug)
      showPerformanceMetrics: false, // Показывать метрики производительности
      verboseLogging: false      // Подробное логирование
    };
  }

}

// Создаем глобальный экземпляр параметров
window.appParameters = new Parameters();

// Экспорт для использования в других модулях
if (typeof module !== 'undefined' && module.exports) {
  module.exports = Parameters;
}
